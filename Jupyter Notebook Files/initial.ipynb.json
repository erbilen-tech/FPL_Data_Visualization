{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/zoeolson1/anaconda/lib/python2.7/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.\n",
      "  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>dob</th>\n",
       "      <th>name</th>\n",
       "      <th>nationality</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>wins</th>\n",
       "      <th>fouls</th>\n",
       "      <th>pl_goals</th>\n",
       "      <th>losses</th>\n",
       "      <th>...</th>\n",
       "      <th>last_man_tackle</th>\n",
       "      <th>clearance_off_line</th>\n",
       "      <th>saves</th>\n",
       "      <th>punches</th>\n",
       "      <th>goal_kicks</th>\n",
       "      <th>penalty_save</th>\n",
       "      <th>keeper_throws</th>\n",
       "      <th>good_high_claim</th>\n",
       "      <th>total_keeper_sweeper</th>\n",
       "      <th>stand_catch_dive_catch</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3452</td>\n",
       "      <td>11/26/90</td>\n",
       "      <td>Danny Welbeck</td>\n",
       "      <td>England</td>\n",
       "      <td>185cm</td>\n",
       "      <td>73kg</td>\n",
       "      <td>87</td>\n",
       "      <td>89</td>\n",
       "      <td>34</td>\n",
       "      <td>35</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5001</td>\n",
       "      <td>12/1/94</td>\n",
       "      <td>Emre Can</td>\n",
       "      <td>Germany</td>\n",
       "      <td>184cm</td>\n",
       "      <td>82kg</td>\n",
       "      <td>29</td>\n",
       "      <td>68</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     id       dob           name nationality height weight  wins  fouls  \\\n",
       "0  3452  11/26/90  Danny Welbeck     England  185cm   73kg    87     89   \n",
       "1  5001   12/1/94       Emre Can     Germany  184cm   82kg    29     68   \n",
       "\n",
       "   pl_goals  losses           ...            last_man_tackle  \\\n",
       "0        34      35           ...                        NaN   \n",
       "1         2      16           ...                        NaN   \n",
       "\n",
       "   clearance_off_line  saves  punches  goal_kicks  penalty_save  \\\n",
       "0                 NaN    NaN      NaN         NaN           NaN   \n",
       "1                 NaN    NaN      NaN         NaN           NaN   \n",
       "\n",
       "   keeper_throws  good_high_claim total_keeper_sweeper  stand_catch_dive_catch  \n",
       "0            NaN              NaN                  NaN                     NaN  \n",
       "1            NaN              NaN                  NaN                     NaN  \n",
       "\n",
       "[2 rows x 56 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "player_data = pd.read_csv('/Users/zoeolson1/player_data.csv')\n",
    "player_data.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We are going to look at how players score goals, and weather goals are more frequently made with the left foot, right foot, or head. First, we will clean our data by replacing all of the NaN values with '0', because this is how they appear in the original CSV. Below we have a list of all of the head, left foot, and right foot goals of each player. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>att_hd_goal</th>\n",
       "      <th>att_lf_goal</th>\n",
       "      <th>att_rf_goal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   att_hd_goal  att_lf_goal  att_rf_goal\n",
       "0          9.0          7.0         18.0\n",
       "1          0.0          0.0          2.0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(player_data, columns = ['att_hd_goal', 'att_lf_goal', 'att_rf_goal'])\n",
    "df2 = df.fillna(0)\n",
    "df2.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we will format the dataframe to make it suitable for a pie chart. We will do so by aggregating each column to get the total head, right foot, and left foot goals. Then creating leables for each of these categories. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>header</th>\n",
       "      <th>left-foot</th>\n",
       "      <th>right-foot</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>538</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539</th>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541</th>\n",
       "      <td>1.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>81.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>542</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>543</th>\n",
       "      <td>2.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>544</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>546</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>547</th>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>548</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>551</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>552</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>555</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>556</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>557</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>558</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>559</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>560</th>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>562</th>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>563</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>565</th>\n",
       "      <td>3.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>566</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Total</th>\n",
       "      <td>655.0</td>\n",
       "      <td>1048.0</td>\n",
       "      <td>2067.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>568 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       header  left-foot  right-foot\n",
       "0         9.0        7.0        18.0\n",
       "1         0.0        0.0         2.0\n",
       "2         3.0        6.0         1.0\n",
       "3         0.0        0.0         0.0\n",
       "4         0.0        0.0         0.0\n",
       "5         0.0        0.0         0.0\n",
       "6         1.0        2.0         5.0\n",
       "7         0.0        0.0         0.0\n",
       "8         0.0        0.0         0.0\n",
       "9         1.0        5.0         1.0\n",
       "10        0.0        0.0         0.0\n",
       "11        0.0        0.0         0.0\n",
       "12        0.0        0.0         0.0\n",
       "13        0.0        0.0         0.0\n",
       "14        0.0        0.0         0.0\n",
       "15        3.0        0.0         1.0\n",
       "16        1.0        6.0        10.0\n",
       "17        3.0        2.0        13.0\n",
       "18        7.0        2.0        13.0\n",
       "19        0.0       19.0         5.0\n",
       "20        4.0        4.0        20.0\n",
       "21        0.0        1.0         0.0\n",
       "22        1.0        0.0         0.0\n",
       "23        0.0        0.0         0.0\n",
       "24        1.0        0.0         3.0\n",
       "25        1.0        0.0         6.0\n",
       "26        0.0        0.0         0.0\n",
       "27        2.0        3.0         1.0\n",
       "28        0.0        0.0         0.0\n",
       "29        0.0        1.0         0.0\n",
       "...       ...        ...         ...\n",
       "538       0.0        0.0         0.0\n",
       "539       3.0        0.0        13.0\n",
       "540       0.0        0.0         0.0\n",
       "541       1.0       18.0        81.0\n",
       "542       0.0        0.0         0.0\n",
       "543       2.0       12.0         3.0\n",
       "544       0.0        0.0         0.0\n",
       "545       0.0        0.0         0.0\n",
       "546       0.0        2.0        14.0\n",
       "547       0.0        2.0         2.0\n",
       "548       0.0        0.0         0.0\n",
       "549       0.0        0.0         0.0\n",
       "550       0.0        0.0         0.0\n",
       "551       0.0        0.0         0.0\n",
       "552       1.0        0.0         1.0\n",
       "553       0.0        3.0         1.0\n",
       "554       0.0        0.0         1.0\n",
       "555       0.0        0.0         0.0\n",
       "556       0.0        0.0         0.0\n",
       "557       0.0        0.0         0.0\n",
       "558       0.0        0.0         1.0\n",
       "559       0.0        0.0         0.0\n",
       "560       2.0        2.0        17.0\n",
       "561       0.0        0.0         0.0\n",
       "562       3.0        1.0         1.0\n",
       "563       0.0        0.0         0.0\n",
       "564       0.0        1.0         1.0\n",
       "565       3.0        5.0         5.0\n",
       "566       0.0        0.0         0.0\n",
       "Total   655.0     1048.0      2067.0\n",
       "\n",
       "[568 rows x 3 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.columns = ['header', 'left-foot', 'right-foot']\n",
    "df2.loc['Total']= df2.sum()\n",
    "df2"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Great, we have a total row. Now lets remove all of the data except for the column headers and totals. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "goal_types = df2.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>558</th>\n",
       "      <th>559</th>\n",
       "      <th>560</th>\n",
       "      <th>561</th>\n",
       "      <th>562</th>\n",
       "      <th>563</th>\n",
       "      <th>564</th>\n",
       "      <th>565</th>\n",
       "      <th>566</th>\n",
       "      <th>Total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>header</th>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>655.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>left-foot</th>\n",
       "      <td>7.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1048.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>right-foot</th>\n",
       "      <td>18.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2067.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 568 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               0    1    2    3    4    5    6    7    8    9   ...    558  \\\n",
       "header       9.0  0.0  3.0  0.0  0.0  0.0  1.0  0.0  0.0  1.0   ...    0.0   \n",
       "left-foot    7.0  0.0  6.0  0.0  0.0  0.0  2.0  0.0  0.0  5.0   ...    0.0   \n",
       "right-foot  18.0  2.0  1.0  0.0  0.0  0.0  5.0  0.0  0.0  1.0   ...    1.0   \n",
       "\n",
       "            559   560  561  562  563  564  565  566   Total  \n",
       "header      0.0   2.0  0.0  3.0  0.0  0.0  3.0  0.0   655.0  \n",
       "left-foot   0.0   2.0  0.0  1.0  0.0  1.0  5.0  0.0  1048.0  \n",
       "right-foot  0.0  17.0  0.0  1.0  0.0  1.0  5.0  0.0  2067.0  \n",
       "\n",
       "[3 rows x 568 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "goal_types.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>header</th>\n",
       "      <td>655.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>left-foot</th>\n",
       "      <td>1048.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>right-foot</th>\n",
       "      <td>2067.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Total\n",
       "header       655.0\n",
       "left-foot   1048.0\n",
       "right-foot  2067.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "goal_types = pd.DataFrame(goal_types['Total'])\n",
    "\n",
    "goal_types.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Great, now our data frame is ready for a pie chart display!  \n",
    "For our pie chart, we will choose colors using iWantHue ( http://tools.medialab.sciences-po.fr/iwanthue/ ).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1133eed50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "colors = [\"#e49300\", \"#0263f3\", \"#dbff62\", \"#ff004e\",\"#a14400\"]\n",
    "\n",
    "plt.pie(goal_types['Total'], labels = goal_types.index, shadow= False, colors = colors, explode = (0, 0, 0), startangle = 90, autopct='%1.1f%%',)\n",
    "\n",
    "plt.axis('equal')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yay! We have our pie chart. Now lets look at what other factors go into goal scoring.."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nationality</th>\n",
       "      <th>id</th>\n",
       "      <th>pl_goals</th>\n",
       "      <th>appearances</th>\n",
       "      <th>blocked_scoring_att</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>England</td>\n",
       "      <td>3452</td>\n",
       "      <td>34</td>\n",
       "      <td>154</td>\n",
       "      <td>84.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Germany</td>\n",
       "      <td>5001</td>\n",
       "      <td>2</td>\n",
       "      <td>60</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Spain</td>\n",
       "      <td>4805</td>\n",
       "      <td>10</td>\n",
       "      <td>39</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  nationality    id  pl_goals  appearances  blocked_scoring_att\n",
       "0     England  3452        34          154                 84.0\n",
       "1     Germany  5001         2           60                 13.0\n",
       "2       Spain  4805        10           39                 13.0"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ng = pd.DataFrame(player_data, columns = ['nationality', 'id', 'pl_goals', 'appearances', 'blocked_scoring_att'])\n",
    "nat_goals = ng.fillna(0)\n",
    "nat_goals.head(3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nationality</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Australia</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  nationality  id\n",
       "0           0   1\n",
       "1     Algeria   4\n",
       "2   Argentina  16\n",
       "3     Armenia   1\n",
       "4   Australia   5"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nat_goals2 = (nat_goals.groupby(['nationality'],as_index=False).id.count())\n",
    "nat_goals2.head()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nationality</th>\n",
       "      <th>pl_goals</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Australia</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  nationality  pl_goals\n",
       "0           0         0\n",
       "1     Algeria        25\n",
       "2   Argentina       152\n",
       "3     Armenia         0\n",
       "4   Australia         0"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nat_goals3 = (nat_goals.groupby(['nationality'],as_index=False).pl_goals.sum())\n",
    "nat_goals3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nationality</th>\n",
       "      <th>id</th>\n",
       "      <th>pl_goals</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Algeria</td>\n",
       "      <td>4</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Argentina</td>\n",
       "      <td>16</td>\n",
       "      <td>152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Australia</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Austria</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Belgium</td>\n",
       "      <td>23</td>\n",
       "      <td>289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Bosnia And Herzegovina</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Brazil</td>\n",
       "      <td>12</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Cameroon</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Canada</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Chile</td>\n",
       "      <td>2</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Congo</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Costa Rica</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Cote D'Ivoire</td>\n",
       "      <td>7</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Curacao</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>5</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Ecuador</td>\n",
       "      <td>4</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Egypt</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>England</td>\n",
       "      <td>207</td>\n",
       "      <td>1585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Equatorial Guinea</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Estonia</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>France</td>\n",
       "      <td>30</td>\n",
       "      <td>208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Gabon</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Gambia</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Germany</td>\n",
       "      <td>12</td>\n",
       "      <td>44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Ghana</td>\n",
       "      <td>3</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Italy</td>\n",
       "      <td>6</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Jamaica</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Japan</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Kenya</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Lithuania</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Mali</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Morocco</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>18</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>New Zealand</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Nigeria</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Northern Ireland</td>\n",
       "      <td>7</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Norway</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Poland</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Romania</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Scotland</td>\n",
       "      <td>17</td>\n",
       "      <td>133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Senegal</td>\n",
       "      <td>7</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Serbia</td>\n",
       "      <td>5</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Slovakia</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>South Africa</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>South Korea</td>\n",
       "      <td>3</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Spain</td>\n",
       "      <td>41</td>\n",
       "      <td>243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>5</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Tunisia</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Turkey</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>United States</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>Uruguay</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>Venezuela</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>Wales</td>\n",
       "      <td>13</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>63 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               nationality   id  pl_goals\n",
       "0                        0    1         0\n",
       "1                  Algeria    4        25\n",
       "2                Argentina   16       152\n",
       "3                  Armenia    1         0\n",
       "4                Australia    5         0\n",
       "5                  Austria    7        23\n",
       "6                  Belgium   23       289\n",
       "7   Bosnia And Herzegovina    2         0\n",
       "8                   Brazil   12        96\n",
       "9                 Cameroon    2         0\n",
       "10                  Canada    1         2\n",
       "11                   Chile    2        33\n",
       "12                Colombia    3         1\n",
       "13                   Congo    3        20\n",
       "14              Costa Rica    1         2\n",
       "15           Cote D'Ivoire    7       107\n",
       "16                 Croatia    1         3\n",
       "17                 Curacao    1         1\n",
       "18          Czech Republic    1         0\n",
       "19                 Denmark    5        23\n",
       "20                 Ecuador    4        29\n",
       "21                   Egypt    3         5\n",
       "22                 England  207      1585\n",
       "23       Equatorial Guinea    1         0\n",
       "24                 Estonia    1         0\n",
       "25                  France   30       208\n",
       "26                   Gabon    1         0\n",
       "27                  Gambia    1         1\n",
       "28                 Germany   12        44\n",
       "29                   Ghana    3        16\n",
       "..                     ...  ...       ...\n",
       "33                   Italy    6        17\n",
       "34                 Jamaica    2         7\n",
       "35                   Japan    3         7\n",
       "36                   Kenya    1         5\n",
       "37               Lithuania    1         0\n",
       "38                    Mali    1         2\n",
       "39                 Morocco    2         0\n",
       "40             Netherlands   18        45\n",
       "41             New Zealand    1         4\n",
       "42                 Nigeria    9        66\n",
       "43        Northern Ireland    7        47\n",
       "44                  Norway    4         9\n",
       "45                  Poland    6         1\n",
       "46                Portugal    5         7\n",
       "47                 Romania    2         0\n",
       "48                Scotland   17       133\n",
       "49                 Senegal    7        68\n",
       "50                  Serbia    5        47\n",
       "51                Slovakia    1         0\n",
       "52            South Africa    1        19\n",
       "53             South Korea    3        28\n",
       "54                   Spain   41       243\n",
       "55                  Sweden    5        38\n",
       "56             Switzerland    6         9\n",
       "57                 Tunisia    2         2\n",
       "58                  Turkey    1         0\n",
       "59           United States    6         2\n",
       "60                 Uruguay    5        15\n",
       "61               Venezuela    1        11\n",
       "62                   Wales   13        70\n",
       "\n",
       "[63 rows x 3 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged_goals = pd.merge(left=nat_goals2,right=nat_goals3, left_on='nationality', right_on='nationality')\n",
    "merged_goals"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Excellent! Now lets look at nations with over 10 players."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "final_data = merged_goals.loc[merged_goals['id'] >= 10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11ab1af10>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import matplotlib\n",
    "matplotlib.style.use('ggplot')\n",
    "merged_goals.plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "High five! You successfuly sent some data to your account on plotly. View your plot in your browser at https://plot.ly/~zoe1114/0 or inside your plot.ly account where it is named 'style-bar'\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<iframe id=\"igraph\" scrolling=\"no\" style=\"border:none;\" seamless=\"seamless\" src=\"https://plot.ly/~zoe1114/0.embed\" height=\"525px\" width=\"100%\"></iframe>"
      ],
      "text/plain": [
       "<plotly.tools.PlotlyDisplay object>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "import plotly.graph_objs as go\n",
    "\n",
    "import plotly.plotly as py\n",
    "py.sign_in('zoe1114', 'gqr5grvyef')\n",
    "\n",
    "trace1 = go.Bar(\n",
    "    x=final_data['nationality'],\n",
    "    y=final_data['id'],\n",
    "    name='Players',\n",
    "    marker=dict(\n",
    "        color='rgb(55, 83, 109)'\n",
    "    )\n",
    ")\n",
    "trace2 = go.Bar(\n",
    "    x=final_data['nationality'],\n",
    "    y=final_data['pl_goals'],\n",
    "    name='Goals',\n",
    "    marker=dict(\n",
    "        color='rgb(26, 118, 255)'\n",
    "    )\n",
    ")\n",
    "data = [trace1, trace2]\n",
    "layout = go.Layout(\n",
    "    title='# of Players vs. Goals Made',\n",
    "    xaxis=dict(\n",
    "        tickfont=dict(\n",
    "            size=14,\n",
    "            color='rgb(107, 107, 107)'\n",
    "        )\n",
    "    ),\n",
    "    yaxis=dict(\n",
    "        title='Count',\n",
    "        titlefont=dict(\n",
    "            size=16,\n",
    "            color='rgb(107, 107, 107)'\n",
    "        ),\n",
    "        tickfont=dict(\n",
    "            size=14,\n",
    "            color='rgb(107, 107, 107)'\n",
    "        )\n",
    "    ),\n",
    "    legend=dict(\n",
    "        x=0,\n",
    "        y=1.0,\n",
    "        bgcolor='rgba(255, 255, 255, 0)',\n",
    "        bordercolor='rgba(255, 255, 255, 0)'\n",
    "    ),\n",
    "    barmode='group',\n",
    "    bargap=0.15,\n",
    "    bargroupgap=0.1\n",
    ")\n",
    "\n",
    "fig = go.Figure(data=data, layout=layout)\n",
    "py.iplot(fig, filename='style-bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
